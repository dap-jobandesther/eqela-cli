
/*
 * This file is part of Eqela CLI
 * Copyright (c) 2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func substituteVariables(orig as string, vars as map<string,string>) static as string
{
	assert orig
	if String.indexOf(orig, "${") < 0:
		return orig
	var sb = new StringBuilder()
	var varbuf as StringBuilder
	var flag = false
	var it = String.iterate(orig)
	while it {
		var c = it.getNextChar()
		if c <= 0:
			break
		if varbuf {
			if c == '}' {
				var varname = varbuf.toString()
				if vars {
					var r = Map.get(vars, varname)
					if r:
						sb.append(r)
				}
				varbuf = null
			}
			else {
				varbuf.append(c)
			}
			continue
		}
		if flag == true {
			flag = false
			if c == '{' {
				varbuf = new StringBuilder()
			}
			else {
				sb.append('$')
				sb.append(c)
			}
			continue
		}
		if c == '$' {
			flag = true
			continue
		}
		sb.append(c)
	}
	return sb.toString()
}
